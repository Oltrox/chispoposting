CREATE TABLE IF NOT EXISTS usuario (
    c_usuario INTEGER GENERATED BY DEFAULT AS IDENTITY,
    id VARCHAR(12) UNIQUE NOT NULL CHECK (ID <> ''),
    password VARCHAR(64) NOT NULL,
    l_foto VARCHAR(256) NOT NULL,
    correo VARCHAR(76) UNIQUE NOT NULL CHECK (correo <> ''),
    tipo SMALLINT NOT NULL,
    descripcion VARCHAR(400),
    topico SMALLINT,
    f_nacimiento TIMESTAMP NOT NULL,
    f_ultimo TIMESTAMP,
    f_creacion TIMESTAMP,
    n_seguidores INTEGER,
    n_seguidos INTEGER,
    n_publicaciones INTEGER,
    m_castigo SMALLINT,
    f_castigo TIMESTAMP,
    m_elimicacion SMALLINT,
    estado SMALLINT,
    token VARCHAR(256),
    CONSTRAINT fk_topico
        FOREIGN KEY(topico)
            REFERENCES topico(c_topico),
    PRIMARY KEY (c_usuario)
);

-- arreglar el m_elimicacion

CREATE TABLE IF NOT EXISTS publicacion (
    c_publicacion INTEGER GENERATED BY DEFAULT AS IDENTITY,
    c_usuario INTEGER NOT NULL, 
    link VARCHAR(256) NOT NULL CHECK (link <> ''),
    titulo VARCHAR(64) NOT NULL CHECK (titulo <> ''),
    descripcion VARCHAR(400),
    n_likes INTEGER,
    n_dislikes INTEGER,
    n_comentarios INTEGER,
    f_creacion TIMESTAMP NOT NULL,
    visible SMALLINT,
    eliminado SMALLINT,
    CONSTRAINT fk_usuario
        FOREIGN KEY(c_usuario)
            REFERENCES usuario(c_usuario),
    PRIMARY KEY (c_publicacion)
);

'''agregar el tipo de publicacion'''

CREATE TABLE IF NOT EXISTS comentario (
    c_comentario INTEGER GENERATED BY DEFAULT AS IDENTITY,
    c_usuario INTEGER NOT NULL,
    c_publicacion INTEGER NOT NULL,
    f_creacion TIMESTAMP NOT NULL,
    f_modificacion TIME NOT NULL,
    comentario TEXT NOT NULL,
    CONSTRAINT fk_usuario
        FOREIGN KEY (c_usuario)
            REFERENCES usuario(c_usuario),
    CONSTRAINT fk_publicacion
        FOREIGN KEY (c_publicacion)
            REFERENCES publicacion(c_publicacion),
    PRIMARY KEY (c_comentario)
);

CREATE TABLE IF NOT EXISTS evaluacion (
    c_usuario INTEGER NOT NULL,
    c_publicacion INTEGER NOT NULL,
    evaluacion SMALLINT,
    CONSTRAINT fk_usuario
        FOREIGN KEY (c_usuario)
            REFERENCES usuario(c_usuario),
    CONSTRAINT fk_publicacion
        FOREIGN KEY (c_publicacion)
            REFERENCES publicacion(c_publicacion),
    PRIMARY KEY(c_usuario, c_publicacion)
);

CREATE TABLE IF NOT EXISTS seguir (
    c_usuario_1 INTEGER NOT NULL,
    c_usuario_2 INTEGER NOT NULL,
    f_seguir TIMESTAMP NOT NULL,
    CONSTRAINT fk_usuario_1
        FOREIGN KEY (c_usuario_1)
            REFERENCES usuario(c_usuario),
    CONSTRAINT fk_usuario_2
        FOREIGN KEY (c_usuario_2)
            REFERENCES usuario(c_usuario),
    PRIMARY KEY(c_usuario_1, c_usuario_2)
);

CREATE TABLE IF NOT EXISTS topico (
    c_topico INTEGER GENERATED BY DEFAULT AS IDENTITY,
    topico VARCHAR(12),
    PRIMARY KEY(c_topico)
);

'''Agregar 10 topicos definitivos'''

ALTER TABLE usuario ALTER COLUMN topico TYPE SMALLINT USING topico::smallint; '''Importante'''